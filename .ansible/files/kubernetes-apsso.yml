# Namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: apsso

# Secret para baixar imagens do github
---
apiVersion: v1
kind: Secret
metadata:
  name: github-secret
  namespace: apsso
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJnaGNyLmlvIjogewoJCQkiYXV0aCI6ICJZVzVrY21Wd1pXNTBaV0ZrYnpwbmFIQmZORTgxVmtWWlIzZGhkbUo1VjJOcE1uQlhWV2MxV21ad1IyeEZibXR6TURkWWJEaEgiCgkJfQoJfSwKCSJhbGlhc2VzIjogewoJCSJidWlsZGVyIjogImJ1aWxkeCIKCX0KfQ==
type: kubernetes.io/dockerconfigjson

# Secret com certificados SSLs
---
apiVersion: v1
kind: Secret
metadata:
  name: certificado-ssl
  namespace: apsso
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU3RENDQTlTZ0F3SUJBZ0lTQSs2elhvNmRQWURMSzQxY3M2NGVoOU55TUEwR0NTcUdTSWIzRFFFQkN3VUEKTURJeEN6QUpCZ05WQkFZVEFsVlRNUll3RkFZRFZRUUtFdzFNWlhRbmN5QkZibU55ZVhCME1Rc3dDUVlEVlFRRApFd0pTTXpBZUZ3MHlNekV4TURFeE9UTXpNRGxhRncweU5EQXhNekF4T1RNek1EaGFNQm94R0RBV0JnTlZCQU1NCkR5b3VZWEJqYjJSbExtTnZiUzVpY2pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUIKQUpRb2h6RGxpanJSQWFHV1hQSm9XRHBVV3hFWGVEQU45d1B0TUgxWk9CbW5oOXB4a3dYalNqdHRVdFBJRlcwRQpwalBHSGVXQ3FOb0hjZm1CZ0xTdXdXTmJuRjR0K3RRSloxdDFFcWRqRTAwZ2FBcEF1MVM4L3AzcFM3bWIyMjVXCm1OVHd1LzdnNHBtWURHZTlsUTNzbmFCWmRIcVF1WllzNllpb1Qvb0RNd3hMRzlCckxVbzBqVmI2dEwwYllnem4KQ0lsYXhCVVpCVExmVEQ5UkVsdTNDK3FSQzdPWVhkVWVSMHdEUFdvbGlZaFBIS0YxNTRUK2dPUk43dkE4eHNUMwpRcVBnNkgvRU1iWENBeldpNjJvRkp5WHNIVUFIZ01VQ3pGcFQwRm4wSWYrWndNZWVrRHc4N1lmK0dyWU9RNWZhCmlXdTJYUFhuOW9DOTNVSmtyTHNvb0k4Q0F3RUFBYU9DQWhJd2dnSU9NQTRHQTFVZER3RUIvd1FFQXdJRm9EQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVUtYRHJvQ3RsYjFJbEZQWnNKOE5QOXc5TFArUXdId1lEVlIwakJCZ3dGb0FVRkM2ekY3ZFlWc3V1ClVBbEE1aCt2bllzVXdzWXdWUVlJS3dZQkJRVUhBUUVFU1RCSE1DRUdDQ3NHQVFVRkJ6QUJoaFZvZEhSd09pOHYKY2pNdWJ5NXNaVzVqY2k1dmNtY3dJZ1lJS3dZQkJRVUhNQUtHRm1oMGRIQTZMeTl5TXk1cExteGxibU55TG05eQpaeTh3R2dZRFZSMFJCQk13RVlJUEtpNWhjR052WkdVdVkyOXRMbUp5TUJNR0ExVWRJQVFNTUFvd0NBWUdaNEVNCkFRSUJNSUlCQlFZS0t3WUJCQUhXZVFJRUFnU0I5Z1NCOHdEeEFIY0FPMU4zZFQ0dHVZQk9pekJiQnY1QU8yZlkKVDhQMHg3MEFEUzF5YitINjFCY0FBQUdMakpjRDZ3QUFCQU1BU0RCR0FpRUFnaDhTZVdXeHhpSUZ6UEZsdGl4ZAprcUhOdTc0NmpPTXQ4Z1hOKytMZTNWWUNJUUM4OGRqakZhK0I2K0hBU2l4a0NRMHpuOSs1TzZvU1JBemQxRGNLCjlQeGZPd0IyQU5xMnYycy90YllpbjV2Q3UxeHI2SENSY1d5N1VZU0ZOTDJrUFRCSTEvdXJBQUFCaTR5WEJnWUEKQUFRREFFY3dSUUloQUlSbVVnNkZHcmcxbWh6Y1YzK3lUbDBhd0lOdkV3cVM3MzAybUxsaUE0amhBaUE4T2ZqRApFU3BtUU5XSk4rYXpxZk1hOVBGUkU3MCtIQnJ4Y21GRCt6NjFZVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCm80dWN5K0tXRWhQcEdEOWRmRi9KTXRld1pqc0ViRU5rRTlOVEtwZTNNQ0FSUmNIR2s0ZWFMS0hYMTl2blR4SXEKSDI0VjREQ09OMUgxeEdHQTg2UDFxcmdRL01IK1YwNDVXMUZ1RS9zMy91OEJrUGdHdXM0L29mL0lXdHh5V04ydQorMHVuL0JnUDkrWW56WXMyR2Vlb21ZTEdGT21adDc4QXpVR0tPNUQ2SjhBOHBzSTh0ekxabVZ2Z3oxUVdqRHBKCnAyRTQ4aS9YVFptMWxOaUw1YnZXa0JObWo1eVV3T1dRcEVscXlsOXR1bjIrcENKQ1czZlI3YzRSOGZFNWRnY3AKUUt2SEJQRnpIam5xRm1KZUVZM1pNbEQyZyt2U003SUNZNlNaRXpCZXV4N0NQY29ma1ltQ09LcEFYRzcxZDVCZAo3aytwZGtEaGFNNStickhLRWlRZ213PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRkZqQ0NBdjZnQXdJQkFnSVJBSkVyQ0VyUERCaW5VL2JXTGlXblgxb3dEUVlKS29aSWh2Y05BUUVMQlFBdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3SGhjTk1qQXdPVEEwTURBd01EQXcKV2hjTk1qVXdPVEUxTVRZd01EQXdXakF5TVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5UR1YwSjNNZwpSVzVqY25sd2RERUxNQWtHQTFVRUF4TUNVak13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUM3QWhVb3pQYWdsTk1QRXV5TlZaTEQrSUx4bWFaNlFvaW5YU2FxdFN1NXhVeXhyNDVyK1hYSW85Y1AKUjVRVVZUVlhqSjZvb2prWjlZSThRcWxPYnZVN3d5N2JqY0N3WFBOWk9PZnR6Mm53V2dzYnZzQ1VKQ1dIK2pkeApzeFBuSEt6aG0rL2I1RHRGVWtXV3FjRlR6alRJVXU2MXJ1MlAzbUJ3NHFWVXE3WnREcGVsUURScks5TzhadXRtCk5IejZhNHVQVnltWitEQVhYYnB5Yi91QnhhM1NobGc5RjhmbkNidnhLL2VHM01IYWNWM1VSdVBNclNYQmlMeGcKWjNWbXMvRVk5NkpjNWxQL09vaTJSNlgvRXhqcW1BbDNQNTFUK2M4QjVmV21jQmNVcjJPay81bXprNTNjVTZjRwova2lGSGFGcHJpVjF1eFBNVWdQMTdWR2hpOXNWQWdNQkFBR2pnZ0VJTUlJQkJEQU9CZ05WSFE4QkFmOEVCQU1DCkFZWXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0lHQ0NzR0FRVUZCd01CTUJJR0ExVWRFd0VCL3dRSU1BWUIKQWY4Q0FRQXdIUVlEVlIwT0JCWUVGQlF1c3hlM1dGYkxybEFKUU9ZZnI1MkxGTUxHTUI4R0ExVWRJd1FZTUJhQQpGSG0wV2VaN3R1WGtBWE9BQ0lqSUdsajI2WnR1TURJR0NDc0dBUVVGQndFQkJDWXdKREFpQmdnckJnRUZCUWN3CkFvWVdhSFIwY0RvdkwzZ3hMbWt1YkdWdVkzSXViM0puTHpBbkJnTlZIUjhFSURBZU1CeWdHcUFZaGhab2RIUncKT2k4dmVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiTUJrd0NBWUdaNEVNQVFJQk1BMEdDeXNHQVFRQgpndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ0Z5azVIUHFQM2hVU0Z2TlZuZUxLWVk2MTFUUjZXClBUTmxjbFF0Z2FEcXcrMzRJTDlmekxkd0FMZHVPL1plbE43a0lKK203NHV5QStlaXRSWThrYzYwN1RrQzUzd2wKaWtmbVpXNC9SdlRaOE02VUsrNVV6aEs4akNkTHVNR1lMNkt2elhHUlNnaTN5TGdqZXdRdENQa0lWejZEMlFRegpDa2NoZUFtQ0o4TXF5SnU1emx6eVpNakF2bm5BVDQ1dFJBeGVrcnN1OTRzUTRlZ2RSQ25iV1NEdFk3a2grQkltCmxKTlhvQjFsQk1FS0lxNFFEVU9Yb1JnZmZ1RGdoamUxV3JHOU1MK0hiaXNxL3lGT0d3WEQ5UmlYOEY2c3c2VzQKYXZBdXZEc3p1ZTVMM3N6ODVLK0VDNFkvd0ZWRE52Wm80VFlYYW82WjBmK2xRS2MwdDhEUVl6azFPWFZ1OHJwMgp5Sk1DNmFsTGJCZk9EQUxadllIN243ZG8xQVpsczRJOWQxUDRqbmtEclFveEIzVXFROWhWbDNMRUtRNzN4RjFPCnlLNUdoRERYOG9WZkdLRjV1K2RlY0lzSDRZYVR3N21QM0dGeEpTcXYzKzBsVUZKb2k1TGM1ZGExNDlwOTBJZHMKaENFeHJvTDErN21yeUlrWFBlRk01VGdPOXIwcnZaYUJGT3ZWMnowZ3AzNVowK0w0V1BsYnVFak4vbHhQRmluKwpIbFVqcjhnUnNJM3FmSk9RRnkvOXJLSUpSMFkvOE9td3QvOG9UV2d5MW1kZUhtbWprN2oxbllzdkM5SlNRNlp2Ck1sZGxUVEtCM3poVGhWMStYV1lwNnJqZDVKVzF6YlZXRWtMTnhFN0dKVGhFVUczc3pnQlZHUDdwU1dUVVRzcVgKbkxSYndIT29xN2hId2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGWURDQ0JFaWdBd0lCQWdJUVFBRjNJVGZVNlVLNDduYXFQR1FLdHpBTkJna3Foa2lHOXcwQkFRc0ZBREEvCk1TUXdJZ1lEVlFRS0V4dEVhV2RwZEdGc0lGTnBaMjVoZEhWeVpTQlVjblZ6ZENCRGJ5NHhGekFWQmdOVkJBTVQKRGtSVFZDQlNiMjkwSUVOQklGZ3pNQjRYRFRJeE1ERXlNREU1TVRRd00xb1hEVEkwTURrek1ERTRNVFF3TTFvdwpUekVMTUFrR0ExVUVCaE1DVlZNeEtUQW5CZ05WQkFvVElFbHVkR1Z5Ym1WMElGTmxZM1Z5YVhSNUlGSmxjMlZoCmNtTm9JRWR5YjNWd01SVXdFd1lEVlFRREV3eEpVMUpISUZKdmIzUWdXREV3Z2dJaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUN0NkNSejlCUTM4NXVlSzFjb0hJZSszTGZmT0pDTWJqem1WNkI0OTNYQwpvdjcxYW03MkFFOG8yOTVvaG14RWs3YXhZLzBVRW11L0g5THFNWnNoZnRFelBMcEk5ZDE1MzdPNC94THhJWnBMCndZcUdjV2xLWm1ac2ozNDhjTCt0S1NJRzgrVEE1b0N1NGt1UHQ1bCtsQU9mMDBlWGZKbElJMVBvT0s1UENtK0QKTHRGSlY0eUFkTGJhTDlBNGpYc0RjQ0ViZGZJd1BQcVBydDNhWTZ2ckZrL0NqaEZMZnM4TDZQKzFkeTcwc250Swo0RXdTSlF4d2pRTXBvT0ZUSk93VDJlNFp2eEN6U293L2lhTmhVZDZzaHdlVTlHTng3QzdpYjF1WWdlR0pYRFI1CmJIYnZPNUJpZWViYnBKb3ZKc1hRRU9FTzN0a1FqaGI3dC9lbzk4ZmxBZ2VZanpZSWxlZmlONVlOTm5XZSt3NXkKc1IyYnZBUDVTUVhZZ2QwRnRDcldRZW1zQVhhVkNnL1kzOVc5RWg4MUx5Z1hiTktZd2FnSlpIZHVSemU2enF4WgpYbWlkZjNMV2ljVUdRU2srV1Q3ZEp2VWt5UkduV3FOTVFCOUdvWm0xcHpwUmJvWTdubjF5cHhJRmVGbnRQbEY0CkZRc0RqNDNRTHdXeVBudEtIRXR6QlJMOHh1cmdVQk44UTVOMHM4cDA1NDRmQVFqUU1OUmJjVGEwQjdyQk1EQmMKU0xlQ081aW1mV0NLb3FNcGdzeTZ2WU1FRzZLREEwR2gxZ1h4RzhLMjhLaDhoanRHcUVncWlOeDJtbmEvSDJxbApQUm1QNnpqelpON0lLdzBLS1AvMzIrSVZRdFFpMENkZDRYbitHT2R3aUsxTzV0bUxPc2JkSjFGdS83eGs5VE5EClR3SURBUUFCbzRJQlJqQ0NBVUl3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFPQmdOVkhROEJBZjhFQkFNQ0FRWXcKU3dZSUt3WUJCUVVIQVFFRVB6QTlNRHNHQ0NzR0FRVUZCekFDaGk5b2RIUndPaTh2WVhCd2N5NXBaR1Z1ZEhKMQpjM1F1WTI5dEwzSnZiM1J6TDJSemRISnZiM1JqWVhnekxuQTNZekFmQmdOVkhTTUVHREFXZ0JURXA3R2tleXh4Cit0dmhTNUIxLzhRVllJV0pFREJVQmdOVkhTQUVUVEJMTUFnR0JtZUJEQUVDQVRBL0Jnc3JCZ0VFQVlMZkV3RUIKQVRBd01DNEdDQ3NHQVFVRkJ3SUJGaUpvZEhSd09pOHZZM0J6TG5KdmIzUXRlREV1YkdWMGMyVnVZM0o1Y0hRdQpiM0puTUR3R0ExVWRId1ExTURNd01hQXZvQzJHSzJoMGRIQTZMeTlqY213dWFXUmxiblJ5ZFhOMExtTnZiUzlFClUxUlNUMDlVUTBGWU0wTlNUQzVqY213d0hRWURWUjBPQkJZRUZIbTBXZVo3dHVYa0FYT0FDSWpJR2xqMjZadHUKTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBS2N3QnNsbTcvRGxMUXJ0Mk01MW9HclMrbzQ0Ky95UW9ERlZEQwo1V3hDdTIrYjlMUlB3a1NJQ0hYTTZ3ZWJGR0p1ZU43c0o3bzVYUFdpb1c1V2xIQVFVN0c3NUsvUW9zTXJBZFNXCjlNVWdOVFA1MkdFMjRIR050TGkxcW9KRmxjRHlxU01vNTlhaHkyY0kycUJETEtvYmt4L0ozdldyYVYwVDlWdUcKV0NMS1RWWGtjR2R0d2xmRlJqbEJ6NHBZZzFodG1mNVg2RFlPOEE0anF2MklsOURqWEE2VVNiVzFGelhTTHI5TwpoZThZNElXUzZ3WTdiQ2tqQ1dEY1JRSk1FaGc3NmZzTzN0eEUrRmlZcnVxOVJVV2hpRjFteXY0UTZXK0N5QkZDCkRmdnA3T09HQU42ZEVPTTQrcVI5c2Rqb1NZS0VCcHNyNkd0UEFRdzRkeTc1M2VjNQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ1VLSWN3NVlvNjBRR2gKbGx6eWFGZzZWRnNSRjNnd0RmY0Q3VEI5V1RnWnA0ZmFjWk1GNDBvN2JWTFR5QlZ0QktZenhoM2xncWphQjNINQpnWUMwcnNGalc1eGVMZnJVQ1dkYmRSS25ZeE5OSUdnS1FMdFV2UDZkNlV1NW05dHVWcGpVOEx2KzRPS1ptQXhuCnZaVU43SjJnV1hSNmtMbVdMT21JcUUvNkF6TU1TeHZRYXkxS05JMVcrclM5RzJJTTV3aUpXc1FWR1FVeTMwdy8KVVJKYnR3dnFrUXV6bUYzVkhrZE1BejFxSlltSVR4eWhkZWVFL29Ea1RlN3dQTWJFOTBLajRPaC94REcxd2dNMQpvdXRxQlNjbDdCMUFCNERGQXN4YVU5Qlo5Q0gvbWNESG5wQThQTzJIL2hxMkRrT1gyb2xydGx6MTUvYUF2ZDFDClpLeTdLS0NQQWdNQkFBRUNnZ0VBQTJ2cUwxbGx0MVVEVmlGOFZRYk8zczM2Nm1xaDFtNUVJWjJWTEpmbVlVVksKc0dOR0UzRTcwaUtFc3FwZ3dFdEdzVlJtZFZudW4xWmpyZkR0TVg4RnJVODh6Ym4vSEcxNUt4WUpqNzhNZjQvNwpoeDBXbG03azdHMnFWNGQvYWsxcXF5UkNHekZEV211MkFhRlJzMmdlL2NpREZaK0pBYXhZMmxTVXdEL1pxbk42Cm1mNTZiOU1UdDNqRjNqa0J0b25ucFVMYjljOUxmU2tFZlRYeUxsaUIxV1dGS0YwM2dOQ0Q5QXNPQU9XS0pJbnIKZnJhMzRuSEE3bktacXVzL3A2d1ZSbngvekFqRlc4VzZCaDNDVTNLRWJBOGRaRXV4YncxaVJjK0ZXTWtqU3JLcwoxY3phMkRVSVpyREVXRWVKajVyamF5bHNSTjU2ZTZVRExxSWh3d21DZFFLQmdRQytHemR6dFFTVUpmbmtPSWlVCnN0SHE1d0V0WWhkSFBSVzI1MzRSa2p2UFV0ejNEaGxsWWE5d3ZFc1AwZmFTdnM1L2ZMcnN3NlZEUFhDbUpIemEKcjA4cXRheHJ1R2ZaQVBVeHNBdWZZdzIvVFBYMEFTMkxkNWQ0S1RJbVJlSXdxYTNOZ1d3MFNiRG9RNjU3Q0VMaQpSbTBOcXp5K2N6ZjlaQkhud0NxWkNWbmREUUtCZ1FESGd4OHZnbjZlV2theXY4dVBtMFNIa3pYeVF5akRqS25DClMvNit4WG1EMFpOWGtBa3ZGRWsrSndTSjlKMFNBWkFyWHd5VE5oNlJtUkxpTk9NWGU4ZVFMaTRERXQ5SVNydHUKV0dHd0lESUpTR3ZrMTMxbHZlNWNYTTQvNDNHVXJCczRkVnNaTmFJcEFNdERKaWtjOWF6b2xuZ3hjcE9xbTdNdApUVHRIVnU1bEN3S0JnUUNMSGZHamErbHczS1dVL0VYK3d5bFl4RG1aVTNvRGVORW1LeHVYa2pMUWtpdi9ZMEwwCmJOcnRIZTIwSXd0VThlcTlZcktMeHRSdWMweTNXR1pCeGg2aCs1YTBzWnJWTTUwN0FrQlBJRGFVTXFhZUxDcC8KTUVJWS9kU2tLMm5PQUsyZWdNS0ZOUlFQdEUrLzJ4ak82NGlzZ3c0TnROVlpTZHpNZ2xUcDd1empGUUtCZ0ZzMwpKS3ZwQXBETmYyTTc4d3B1RjQvUWl5cCs4QVV2cTNGc28wUi9Mb1pJN0E5dGgvVmhWZmMzaVlpMU1KYko1aXNlCklyYXZXSnlDbXJLWE1YaE1IRHBjRXFkUEdveUh0bGZGeXF2bW5GbklKYVFUclg0MXJ1UEZmbnFSTngyYzdqa0sKMXFLWTlkRy9UaThlSkUvY05yaUVDdUc0bTdDMXpONmFYODdHL09sdkFvR0JBS05xYzlwK202TUlCeWFFU2g3aQpKeWRwYXdpeWFaa2gxUmVkUjNyVFR1WHBNWlBiL0cvRTFpN1VoTlFQZlZ4N2U1TGhKbmVzS2Y0bTVsZUhMajgrCkhaa3BiQURleHE4OHJma0RCM1pnRlJSaUJjRFR0WkRVYVJDS1lXUzNaelIxU1Jwd2hRVnQ2OU5JUFhHZExobysKRU5yQ25GQ2hXSUtyd0paYVRnT25wQXhFCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

# Interface de Login
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name apsso-login
  namespace: apsso
  labels: &selector
    apcode.com.br/app: apsso
    apcode.com.br/module: login
    apcode.com.br/version: 2.0.0
    apcode.com.br/env: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      <<: *selector
  template:
    metadata:
      labels:
        <<: *selector
    spec:
      containers:
        - name: *name
          image: ghcr.io/andrepenteado/apsso/login
          imagePullPolicy: Always
          ports:
            - containerPort: 30000
      imagePullSecrets:
        - name: github-secret
---
apiVersion: v1
kind: Service
metadata:
  name: apsso-login
  namespace: apsso
  labels: &selector
    apcode.com.br/app: apsso
    apcode.com.br/module: login
    apcode.com.br/version: 2.0.0
    apcode.com.br/env: prod
spec:
  type: LoadBalancer
  ports:
    - name: apsso-login
      port: 30000
      targetPort: 30000
  selector:
    <<: *selector

# Módulo de Controle
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name apsso-controle
  namespace: apsso
  labels: &selector
    apcode.com.br/app: apsso
    apcode.com.br/module: controle
    apcode.com.br/version: 2.0.0
    apcode.com.br/env: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      <<: *selector
  template:
    metadata:
      labels:
        <<: *selector
    spec:
      containers:
        - name: *name
          image: ghcr.io/andrepenteado/apsso/controle
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: github-secret
---
apiVersion: v1
kind: Service
metadata:
  name: &name apsso-controle
  namespace: apsso
  labels: &selector
    apcode.com.br/app: apsso
    apcode.com.br/module: controle
    apcode.com.br/version: 2.0.0
    apcode.com.br/env: prod
spec:
  type: LoadBalancer
  ports:
    - name: *name
      port: 8080
      targetPort: 8080
  selector:
    <<: *selector

# Portal de Sistemas
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name apsso-portal
  namespace: apsso
  labels: &selector
    apcode.com.br/app: apsso
    apcode.com.br/module: portal
    apcode.com.br/version: 2.0.0
    apcode.com.br/env: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      <<: *selector
  template:
    metadata:
      labels:
        <<: *selector
    spec:
      containers:
        - name: *name
          image: ghcr.io/andrepenteado/apsso/portal
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
      imagePullSecrets:
        - name: github-secret
---
apiVersion: v1
kind: Service
metadata:
  name: &name apsso-portal
  namespace: apsso
  labels: &selector
    apcode.com.br/app: apsso
    apcode.com.br/module: portal
    apcode.com.br/version: 2.0.0
    apcode.com.br/env: prod
spec:
  type: LoadBalancer
  ports:
    - name: *name
      port: 8080
      targetPort: 8080
  selector:
    <<: *selector

# Proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apsso
  namespace: apsso
spec:
  tls:
    - secretName: certificado-ssl
  rules:
    - host: login.apcode.com.br
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: apsso-login
                port:
                  name: apsso-login
    - host: controle.apcode.com.br
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: apsso-controle
                port:
                  name: apsso-controle
    - host: portal.apcode.com.br
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: apsso-portal
                port:
                  name: apsso-portal
